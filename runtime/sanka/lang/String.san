// -*- mode: Java; -*-
package sanka.lang;

class String {
    c__include "string.h";

    String(byte[] arr) {
        // To initialize a String, the translator generates a call to
        // NEW_STRING(). So this method is never called.
    }

    int length() {
        c__stmt "return strlen(this)";
    }

    int indexOf(byte b) {
        c__stmt "for (int idx = 0; this[idx] != 0; idx++) if (this[idx] == b) return idx";
        c__stmt "return -1";
    }

    int find(String s) {
        c__stmt "char *cp = strstr(this, s)";
        c__stmt "return cp == NULL ? -1 : (cp - this)";
    }

    boolean startsWith(String s) {
        c__stmt "return strncmp(this, s, strlen(s)) == 0";
    }

    boolean endsWith(String s) {
        c__stmt "int n1 = strlen(this)";
        c__stmt "int n2 = strlen(s)";
        c__stmt "return (n1 >= n2) && strcmp(this+(n1-n2), s) == 0";
    }

    String substring(int beginIndex, int endIndex) {
        c__stmt "return STRING_SUBSTRING(this, beginIndex, endIndex)";
    }
}
