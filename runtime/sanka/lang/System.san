// -*- mode: Java; -*-
package sanka.lang;

class System {
    c__include "stdio.h";
    c__include "stdlib.h";
    c__include "string.h";
    c__include "unistd.h";
    c__include "sys/time.h";

    static void print(String text) {
        c__stmt "fputs(text, stdout)";
    }

    static void println(String text) {
        c__stmt "puts(text)";
    }

    static String readline() {
        // Should share this function with FileReader.readline().
        c__stmt "char buf[256]";
        c__stmt "if (fgets(buf, sizeof(buf), stdin) == NULL) return NULL";
        c__stmt "buf[sizeof(buf)-1] = 0";
        c__stmt "int len = strlen(buf)";
        c__stmt "while (len > 0 && (buf[len-1] == '\n' || buf[len-1] == '\r')) len--";
        c__stmt "buf[len] = 0";
        c__stmt "return strdup(buf)";
    }

    static String strerror(int errno) {
        c__stmt "return strerror(errno)";
    }

    static long currentTimeMillis() {
        c__stmt "struct timeval now";
        c__stmt "gettimeofday(&now, NULL)";
        c__stmt "return ((long long)now.tv_sec)*1000 + (now.tv_usec/1000)";
    }

    static void sleep(int millis) {
        c__stmt "usleep(millis * 1000)";
    }

    static int random(int max) {
        c__stmt "return random() % max";
    }

    static void gc() {
        c__stmt "while (GC_collect_a_little() != 0)";
    }

    static long parseLong(String text) {
        c__stmt "return strtol(text, NULL, 0)";
    }
}
